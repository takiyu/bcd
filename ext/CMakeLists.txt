
ADD_SUBDIRECTORY(zlib)
TARGET_INCLUDE_DIRECTORIES(zlibstatic INTERFACE ${CMAKE_CURRENT_SOURCE_DIR}/zlib)
TARGET_INCLUDE_DIRECTORIES(zlibstatic INTERFACE ${CMAKE_CURRENT_BINARY_DIR}/zlib)

SET(BUILD_TESTING OFF CACHE BOOL "" FORCE)

MESSAGE(STATUS "Entering subdirectory 'eigen'")
ADD_SUBDIRECTORY(eigen)

SET(BUILD_SHARED_LIBS OFF CACHE BOOL "" FORCE)


IF(BCD_BUILD_GUI)
	MESSAGE(STATUS "Entering subdirectory 'nanogui'")
	SET(NANOGUI_BUILD_EXAMPLE OFF CACHE BOOL "" FORCE)
	SET(NANOGUI_BUILD_PYTHON OFF CACHE BOOL "" FORCE)
	SET(NANOGUI_BUILD_SHARED OFF CACHE BOOL "" FORCE)
	SET(NANOGUI_INSTALL OFF CACHE BOOL "" FORCE)
	ADD_SUBDIRECTORY(nanogui)

	ADD_LIBRARY(NanoguiTarget INTERFACE)

#	message(AUTHOR_WARNING "in ext: NANOGUI_EXTRA_LIBS = '${NANOGUI_EXTRA_LIBS}'")
#	message(AUTHOR_WARNING "in ext: NANOGUI_EXTRA_INCS = '${NANOGUI_EXTRA_INCS}'")
#	message(AUTHOR_WARNING "in ext: NANOGUI_EXTRA_DEFS = '${NANOGUI_EXTRA_DEFS}'")

	TARGET_LINK_LIBRARIES(NanoguiTarget INTERFACE nanogui)
	TARGET_LINK_LIBRARIES(NanoguiTarget INTERFACE ${NANOGUI_EXTRA_LIBS})

	TARGET_INCLUDE_DIRECTORIES(NanoguiTarget INTERFACE ${NANOGUI_EXTRA_INCS})
	TARGET_INCLUDE_DIRECTORIES(NanoguiTarget INTERFACE nanogui/include)

	TARGET_COMPILE_DEFINITIONS(NanoguiTarget INTERFACE ${NANOGUI_EXTRA_DEFS})

ELSE(BCD_BUILD_GUI)
	MESSAGE(STATUS "skipping building of NanoGUI")
ENDIF(BCD_BUILD_GUI)

ADD_LIBRARY(Json INTERFACE)
TARGET_INCLUDE_DIRECTORIES(Json INTERFACE ${CMAKE_CURRENT_SOURCE_DIR}/json/src)

